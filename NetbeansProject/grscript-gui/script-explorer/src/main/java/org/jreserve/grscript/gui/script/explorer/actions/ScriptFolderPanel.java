package org.jreserve.grscript.gui.script.explorer.actions;

import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jreserve.grscript.gui.script.registry.ScriptFolder;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotificationLineSupport;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Peter Decsi
 * @version 1.0
 */
@Messages({
    "LBL.ScriptFolderPanel.Name=Name:",
    "MSG.ScriptFolderPanel.NameNull=Field 'Name' is empty!"
})
abstract class ScriptFolderPanel extends javax.swing.JPanel {

    protected ScriptFolder folder;
    private NotificationLineSupport nls;
    private DialogDescriptor dd;
    private Dialog dialog;
    
    ScriptFolderPanel(ScriptFolder folder) {
        this.folder = folder;
        initComponents();
        initDialog();
        validateInput();
    }
    
    private void initDialog() {
        dd = new DialogDescriptor(this, getDialogTitle(), true, new ButtonListener());
        nls = dd.createNotificationLineSupport();
        dialog = DialogDisplayer.getDefault().createDialog(dd);
    }
    
    protected abstract String getDialogTitle();
    
    private void validateInput() {
        boolean valid = isInputValid(nameText.getText());
        dd.setValid(valid);
        if(valid)
            nls.clearMessages();
    }
    
    protected boolean isInputValid(String name) {
        return nameNotNull(name);
    } 
    
    private boolean nameNotNull(String name) {
        if(name==null || name.trim().length() == 0) {
            setErrorMsg(Bundle.MSG_ScriptFolderPanel_NameNull());
            return false;
        }
        return true;
    }

    protected void setErrorMsg(String msg) {
        if(msg != null)
            nls.setErrorMessage(msg);
        else
            nls.clearMessages();
    }
    
    void showDialog() {
        dialog.pack();
        dialog.setSize(500, dialog.getHeight());
        dialog.setVisible(true);
    }
    
    protected void setNameText(String name) {
        nameText.setText(name);
    }
    
    protected String getNameText() {
        return nameText.getText();
    }
    
    protected abstract void dialogOk();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameLabel = new javax.swing.JLabel();
        nameText = new javax.swing.JTextField();
        filler = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));
        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, Bundle.LBL_ScriptFolderPanel_Name());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(nameLabel, gridBagConstraints);

        nameText.setText(null);
        nameText.getDocument().addDocumentListener(new NameListener());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.weightx = 1.0;
        add(nameText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(filler, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    // End of variables declaration//GEN-END:variables

    private class NameListener implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            validateInput();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            validateInput();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }
    } 
    
    private class ButtonListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            if(DialogDescriptor.OK_OPTION == e.getSource())
                dialogOk();
        }
    
    }
    
}
