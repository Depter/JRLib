/*
 *  Copyright (C) 2013, Peter Decsi.
 * 
 *  This library is free software: you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public 
 *  License as published by the Free Software Foundation, either 
 *  version 3 of the License, or (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.jreserve.grscript.gui.plot.plotter;

import java.awt.CardLayout;
import java.awt.Dialog;
import java.awt.Dialog.ModalityType;
import java.awt.Frame;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jreserve.grscript.plot.Plotter;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.util.HelpCtx;
import org.openide.windows.WindowManager;

/**
 *
 * @author Peter Decsi
 * @version 1.0
 */
public class PlotDialog extends javax.swing.JPanel implements Plotter {
    
    private final static boolean MODAL = false;
    
    private DefaultListModel nameModel = new DefaultListModel();
    private CardLayout chartLayout = new CardLayout();
    private final String title;
    
    /**
     * Creates new form PlotDialog
     */
    PlotDialog(String title) {
        this.title = title;
        initComponents();
        chartPanel.setLayout(chartLayout);
    }
    
    @Override
    public void addChart(String name, JPanel chart) {
        chartPanel.add(new JScrollPane(chart), name);
        nameModel.addElement(name);
    }
    
    @Override
    public void showPlot() {
        selectFirstChart();
        showTopComponent();
        
        //JDialog dialog = createDialog();
        //showDialog(dialog);
        
        //DialogDescriptor dd = createDescriptor();
        //showDialog(dd);
    }
    
    private void selectFirstChart() {
        if(!nameModel.isEmpty())
            nameList.setSelectedIndex(0);
    }
    
    private DialogDescriptor createDescriptor() {
        return new DialogDescriptor(
                this, title, MODAL, 
                new Object[0], null, DialogDescriptor.BOTTOM_ALIGN, 
                HelpCtx.DEFAULT_HELP, null);
    }
    
    private void showDialog(final DialogDescriptor dd) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                Dialog dialog = DialogDisplayer.getDefault().createDialog(dd);
                dialog.pack();
                dialog.setVisible(true);
            }
        });
    }
    
    private JDialog createDialog() {
        Frame owner = WindowManager.getDefault().getMainWindow();
        JDialog dialog = new JDialog(owner, title, ModalityType.MODELESS);
        dialog.getContentPane().add(this);
        return dialog;
    }
    
    private void showDialog(final JDialog dialog) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                dialog.pack();
                dialog.setVisible(true);
            }
        });
    }

    private void showTopComponent() {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                UndockedTopComponent.create(title, PlotDialog.this);
            }
        });
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPanel = new javax.swing.JSplitPane();
        nameListScroll = new javax.swing.JScrollPane();
        nameList = new javax.swing.JList();
        chartPanel = new javax.swing.JPanel(chartLayout);

        setLayout(new java.awt.BorderLayout());

        splitPanel.setDividerLocation(75);

        nameList.setModel(nameModel);
        nameList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        nameList.getSelectionModel().addListSelectionListener(new NameListener());
        nameListScroll.setViewportView(nameList);

        splitPanel.setLeftComponent(nameListScroll);

        chartPanel.setLayout(null);
        splitPanel.setRightComponent(chartPanel);

        add(splitPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    private javax.swing.JList nameList;
    private javax.swing.JScrollPane nameListScroll;
    private javax.swing.JSplitPane splitPanel;
    // End of variables declaration//GEN-END:variables

    private class NameListener implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            String name = (String) nameList.getSelectedValue();
            if(name != null)
                chartLayout.show(chartPanel, name);
        }
    }
}
