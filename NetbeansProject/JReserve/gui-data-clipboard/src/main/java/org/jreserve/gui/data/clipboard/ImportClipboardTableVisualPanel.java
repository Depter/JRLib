/*
 *  Copyright (C) 2013, Peter Decsi.
 * 
 *  This library is free software: you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public 
 *  License as published by the Free Software Foundation, either 
 *  version 3 of the License, or (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.jreserve.gui.data.clipboard;

import javax.swing.DefaultComboBoxModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.text.JTextComponent;
import org.jreserve.gui.localesettings.LocaleSettings;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Peter Decsi
 */
@Messages({
    "LBL.ImportClipboardTableVisualPanel.Name=Paste Table"
})
class ImportClipboardTableVisualPanel extends javax.swing.JPanel {
    
    private final InputListener inputListener = new InputListener();
    private final ImportClipboardTableWizardPanel controller;
    private JTextComponent dateFormatEditor;
    
    ImportClipboardTableVisualPanel(ImportClipboardTableWizardPanel controller) {
        this.controller = controller;
        initComponents();
    }
    
    @Override
    public String getName() {
        return Bundle.LBL_ImportClipboardTableVisualPanel_Name();
    }
    
    String[][] getValues() {
        return ((ClipboardTable) table).getValues();
    }
    
    String getDateFormat() {
        return dateFormatEditor.getText();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dateFormatLabel = new javax.swing.JLabel();
        dateFormatCombo = new javax.swing.JComboBox();
        tablePanel = new javax.swing.JPanel();
        tableTitleLabel = new javax.swing.JLabel();
        tableScroll = new javax.swing.JScrollPane();
        table = new ClipboardTable();

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(dateFormatLabel, org.openide.util.NbBundle.getMessage(ImportClipboardTableVisualPanel.class, "ImportClipboardTableVisualPanel.dateFormatLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 5);
        add(dateFormatLabel, gridBagConstraints);

        dateFormatCombo.setModel(new DefaultComboBoxModel(LocaleSettings.getDateFormatPatterns()));
        dateFormatCombo.setEditable(true);
        dateFormatEditor = (JTextComponent) dateFormatCombo.getEditor().getEditorComponent();
        dateFormatEditor.getDocument().addDocumentListener(inputListener);
        dateFormatCombo.setSelectedItem(LocaleSettings.getDateFormatPattern());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 30, 0);
        add(dateFormatCombo, gridBagConstraints);

        tablePanel.setLayout(new java.awt.BorderLayout());

        org.openide.awt.Mnemonics.setLocalizedText(tableTitleLabel, org.openide.util.NbBundle.getMessage(ImportClipboardTableVisualPanel.class, "ImportClipboardTableVisualPanel.tableTitleLabel.text")); // NOI18N
        tablePanel.add(tableTitleLabel, java.awt.BorderLayout.PAGE_START);

        tableScroll.setPreferredSize(new java.awt.Dimension(375, 150));

        table.getModel().addTableModelListener(inputListener);
        tableScroll.setViewportView(table);

        tablePanel.add(tableScroll, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(tablePanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dateFormatCombo;
    private javax.swing.JLabel dateFormatLabel;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JLabel tableTitleLabel;
    // End of variables declaration//GEN-END:variables

    private class InputListener implements DocumentListener, TableModelListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            controller.changed();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            controller.changed();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }

        @Override
        public void tableChanged(TableModelEvent e) {
            controller.changed();
        }
    }
}
