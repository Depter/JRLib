/*
 * Copyright (C) 2013, Peter Decsi.
 *
 * This library is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public 
 * License as published by the Free Software Foundation, either 
 * version 3 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.jreserve.gui.calculations.factor.wizard;

import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jreserve.gui.calculations.api.CalculationContents;
import org.jreserve.gui.calculations.claimtriangle.ClaimTriangleCalculation;
import org.jreserve.gui.misc.utils.widgets.CommonIcons;
import org.netbeans.api.project.Project;
import org.openide.util.NbBundle.Messages;

/**
 *
 * @author Peter Decsi
 * @version 1.0
 */
@Messages({
    "LBL.CreateFactorVisualPanel2.Name=Claim Triangle",
    "LBL.CreateFactorVisualPanel2.Browse.Title=Select Claim Triangle",
    "PROMPT.CreateVectorVisualPanel2.Storge=Select claim triangle"
})
class CreateFactorVisualPanel2 extends javax.swing.JPanel {
    
    private final CreateFactorWizardPanel2 controller;
    private final InputListener inputListener = new InputListener();
    private Project project;
//    private NamedCalculationProvider dop;
//    private ProjectContentProvider pol;
    
    CreateFactorVisualPanel2(CreateFactorWizardPanel2 controller) {
        this.controller = controller;
        initComponents();
    }
    
    @Override
    public String getName() {
        return Bundle.LBL_CreateFactorVisualPanel2_Name();
    }
    
    void setProject(Project p) {
        this.project = p;
        boolean enable = CalculationContents.containsCalculations(p);
        sourceText.setEnabled(enable);
        browseButton.setEnabled(enable);
    }
    
    Project getProject() {
        return project;
    }
//    
//    NamedCalculationProvider getSourceProvider() {
//        return dop;
//    }
    
//    ProjectContentProvider getProjectObjectLookup() {
//        return pol;
//    }
    
    String getSourcePath() {
        return sourceText.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        sourceLabel = new javax.swing.JLabel();
        sourceText = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        filler = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(sourceLabel, org.openide.util.NbBundle.getMessage(CreateFactorVisualPanel2.class, "CreateFactorVisualPanel2.sourceLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(sourceLabel, gridBagConstraints);

        sourceText.setText(null);
        sourceText.setEnabled(false);
        sourceText.getDocument().addDocumentListener(inputListener);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(sourceText, gridBagConstraints);

        browseButton.setIcon(CommonIcons.search());
        org.openide.awt.Mnemonics.setLocalizedText(browseButton, org.openide.util.NbBundle.getMessage(CreateFactorVisualPanel2.class, "CreateFactorVisualPanel2.browseButton.text")); // NOI18N
        browseButton.setEnabled(false);
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        add(browseButton, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(filler, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        ClaimTriangleCalculation ctc = CalculationContents.selectOne(project, ClaimTriangleCalculation.class);
        if(ctc != null)
            sourceText.setText(ctc.getPath());
    }//GEN-LAST:event_browseButtonActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.Box.Filler filler;
    private javax.swing.JLabel sourceLabel;
    private javax.swing.JTextField sourceText;
    // End of variables declaration//GEN-END:variables

    private class InputListener implements DocumentListener {

        @Override
        public void changedUpdate(DocumentEvent e) {
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
            controller.panelChanged();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            controller.panelChanged();
        }
    }
}
