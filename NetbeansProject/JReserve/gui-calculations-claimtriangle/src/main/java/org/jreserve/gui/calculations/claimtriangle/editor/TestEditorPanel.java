/*
 *  Copyright (C) 2013, Peter Decsi.
 * 
 *  This library is free software: you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public 
 *  License as published by the Free Software Foundation, either 
 *  version 3 of the License, or (at your option) any later version.
 * 
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU General Public License
 *  along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.jreserve.gui.calculations.claimtriangle.editor;

import java.text.DecimalFormat;
import org.jreserve.gui.localesettings.LocaleSettings;
import org.jreserve.gui.misc.utils.widgets.CommonIcons;
import org.jreserve.jrlib.test.CalendarEffectTest;
import org.jreserve.jrlib.test.UncorrelatedDevelopmentFactorsTest;
import org.jreserve.jrlib.triangle.claim.ClaimTriangle;

/**
 *
 * @author Peter Decsi
 * @version 1.0
 */
public class TestEditorPanel extends javax.swing.JPanel {

    private final static int DIGITS = 5;
    
    //TODO write help
    
    /**
     * Creates new form TestEditorPanel
     */
    public TestEditorPanel() {
        initComponents();
    }
    
    void setTriangle(ClaimTriangle triangle) {
        DecimalFormat df = LocaleSettings.createDecimalFormat();
        df.setMaximumFractionDigits(DIGITS);
        
        ceText.setText(df.format(getCalendarEffect(triangle)));
        ufText.setText(df.format(getUncorrelatedDevelopmentFactors(triangle)));
    }
    
    private double getCalendarEffect(ClaimTriangle triangle) {
        return new CalendarEffectTest(triangle).getPValue();
    }
    
    private double getUncorrelatedDevelopmentFactors(ClaimTriangle triangle) {
        return new UncorrelatedDevelopmentFactorsTest(triangle).getPValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        ufLabel = new javax.swing.JLabel();
        ufText = new javax.swing.JTextField();
        ufInfo = new javax.swing.JLabel();
        ceLabel = new javax.swing.JLabel();
        ceText = new javax.swing.JTextField();
        cfInfo = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 12, 12, 12));
        setLayout(new java.awt.GridBagLayout());

        org.openide.awt.Mnemonics.setLocalizedText(ufLabel, org.openide.util.NbBundle.getMessage(TestEditorPanel.class, "TestEditorPanel.ufLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 5);
        add(ufLabel, gridBagConstraints);

        ufText.setColumns(10);
        ufText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        ufText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 5);
        add(ufText, gridBagConstraints);

        ufInfo.setIcon(CommonIcons.help());
        org.openide.awt.Mnemonics.setLocalizedText(ufInfo, " ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        add(ufInfo, gridBagConstraints);

        org.openide.awt.Mnemonics.setLocalizedText(ceLabel, org.openide.util.NbBundle.getMessage(TestEditorPanel.class, "TestEditorPanel.ceLabel.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_LEADING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(ceLabel, gridBagConstraints);

        ceText.setColumns(10);
        ceText.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        ceText.setText(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(ceText, gridBagConstraints);

        cfInfo.setIcon(CommonIcons.help());
        org.openide.awt.Mnemonics.setLocalizedText(cfInfo, " ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE_TRAILING;
        add(cfInfo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(filler1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ceLabel;
    private javax.swing.JTextField ceText;
    private javax.swing.JLabel cfInfo;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel ufInfo;
    private javax.swing.JLabel ufLabel;
    private javax.swing.JTextField ufText;
    // End of variables declaration//GEN-END:variables
}
